// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  var apiKey = '';
  
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions get web {
    final apiKey = dotenv.env['API_FIREBASE'].toString();
    final url = dotenv.env['URL_FIREBASE'].toString();
    return FirebaseOptions(
      apiKey: apiKey,
      appId: '1:468435526864:web:fd0635de7e509063592ad5',
      messagingSenderId: '468435526864',
      projectId: 'stationsantjoan',
      authDomain: 'stationsantjoan.firebaseapp.com',
      databaseURL: url,
      storageBucket: 'stationsantjoan.appspot.com',
    );
  }

  static FirebaseOptions get android {
    final apiKey = dotenv.env['API_FIREBASE'].toString();
    final url = dotenv.env['URL_FIREBASE'].toString();
    return FirebaseOptions(
      apiKey: apiKey,
      appId: '1:468435526864:android:e8a5fb3567279b7b592ad5',
      messagingSenderId: '468435526864',
      projectId: 'stationsantjoan',
      databaseURL: url,
      storageBucket: 'stationsantjoan.appspot.com',
    );
  }

  static FirebaseOptions get ios {
    final apiKey = dotenv.env['API_FIREBASE'].toString();
    final url = dotenv.env['URL_FIREBASE'].toString();
    return FirebaseOptions(
      apiKey: apiKey,
      appId: '1:468435526864:ios:44897b7c48d54b1b592ad5',
      messagingSenderId: '468435526864',
      projectId: 'stationsantjoan',
      databaseURL: url,
      storageBucket: 'stationsantjoan.appspot.com',
      iosBundleId: 'com.ferranechaves.weather',
    );
  }

  static FirebaseOptions get macos {
    final apiKey = dotenv.env['API_FIREBASE'].toString();
    final url = dotenv.env['URL_FIREBASE'].toString();
    return FirebaseOptions(
      apiKey: apiKey,
      appId: '1:468435526864:ios:d4a79e74d8d36043592ad5',
      messagingSenderId: '468435526864',
      projectId: 'stationsantjoan',
      databaseURL: url,
      storageBucket: 'stationsantjoan.appspot.com',
      iosBundleId: 'com.example.radarweather.RunnerTests',
    );
  }
}
